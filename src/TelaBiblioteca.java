/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Macedo
 */
// IMPORTS NECESS√ÅRIOS
import dao.Usuario;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import dao.UsuarioDAO;
import dao.Livro;
import dao.LivroDAO;
import java.time.LocalDate;
import dao.EmprestimoDAO;
import dao.Emprestimo;
import java.util.List;


public class TelaBiblioteca extends javax.swing.JFrame {

    private Usuario usuarioLogado;

    public TelaBiblioteca(Usuario usuarioLogado) {
        this.usuarioLogado = usuarioLogado;
        initComponents();
        setLocationRelativeTo(null); // Centraliza a tela

        listaLivro.setModel(new DefaultListModel<dao.Livro>());
        listaUsuario.setModel(new DefaultListModel<Usuario>());

        carregarLivrosDoBanco();
        carregarUsuariosDoBanco();

        configurarPermissoes(); // üëâ Novo m√©todo para gerenciar permiss√µes

        // T√≠tulo da janela mostra quem est√° logado
        this.setTitle("Biblioteca - Logado como: " + usuarioLogado.getNome() + " (" + usuarioLogado.getNivel() + ")");
    }

    public TelaBiblioteca() {
        initComponents();
        setLocationRelativeTo(null);

        listaLivro.setModel(new DefaultListModel<dao.Livro>());
        listaUsuario.setModel(new DefaultListModel<Usuario>());

        carregarLivrosDoBanco();
        carregarUsuariosDoBanco();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tituloLivroField = new javax.swing.JTextField();
        autorLivroField = new javax.swing.JTextField();
        anoLivroField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        adicionarLivroBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaLivro = new javax.swing.JList<>();
        excluirLivroBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nomeUsuarioField = new javax.swing.JTextField();
        emailUsuarioField = new javax.swing.JTextField();
        telefoneUsuarioField = new javax.swing.JTextField();
        adicionarUsuarioBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaUsuario = new javax.swing.JList<>();
        excluirUsuarioBtn = new javax.swing.JButton();
        emprestarLivroBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(220, 235, 250));

        jPanel1.setLayout(new java.awt.GridBagLayout());

        tituloLivroField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tituloLivroFieldActionPerformed(evt);
            }
        });

        autorLivroField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autorLivroFieldActionPerformed(evt);
            }
        });

        anoLivroField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anoLivroFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("üìñ T√≠tulo do Livro:");

        jLabel2.setText("‚úçÔ∏è Autor:");

        jLabel3.setText("üìÖ Ano:");

        adicionarLivroBtn.setBackground(new java.awt.Color(51, 102, 255));
        adicionarLivroBtn.setForeground(new java.awt.Color(255, 255, 255));
        adicionarLivroBtn.setText("Adicionar Livro");
        adicionarLivroBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarLivroBtnActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(listaLivro);

        excluirLivroBtn.setBackground(new java.awt.Color(255, 0, 0));
        excluirLivroBtn.setForeground(new java.awt.Color(255, 255, 255));
        excluirLivroBtn.setText("Excluir Livro");
        excluirLivroBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirLivroBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("üë§ Nome do Usu√°rio:");

        jLabel5.setText("‚úâÔ∏è E-mail:");

        jLabel6.setText("üìû Telefone:");

        nomeUsuarioField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeUsuarioFieldActionPerformed(evt);
            }
        });

        emailUsuarioField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailUsuarioFieldActionPerformed(evt);
            }
        });

        telefoneUsuarioField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefoneUsuarioFieldActionPerformed(evt);
            }
        });

        adicionarUsuarioBtn.setBackground(new java.awt.Color(51, 102, 255));
        adicionarUsuarioBtn.setForeground(new java.awt.Color(255, 255, 255));
        adicionarUsuarioBtn.setText("Adicionar Usu√°rio");
        adicionarUsuarioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarUsuarioBtnActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(listaUsuario);

        excluirUsuarioBtn.setBackground(new java.awt.Color(255, 0, 0));
        excluirUsuarioBtn.setForeground(new java.awt.Color(255, 255, 255));
        excluirUsuarioBtn.setText("Excluir Usu√°rio");
        excluirUsuarioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirUsuarioBtnActionPerformed(evt);
            }
        });

        emprestarLivroBtn.setBackground(new java.awt.Color(51, 255, 0));
        emprestarLivroBtn.setForeground(new java.awt.Color(255, 255, 255));
        emprestarLivroBtn.setText("Realizar Empr√©stimo");
        emprestarLivroBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emprestarLivroBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adicionarLivroBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(telefoneUsuarioField, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(nomeUsuarioField, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(emailUsuarioField))))
                                .addGap(11, 11, 11))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(208, 208, 208)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tituloLivroField)
                                    .addComponent(anoLivroField)
                                    .addComponent(autorLivroField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(699, 699, 699))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emprestarLivroBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(adicionarUsuarioBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(excluirLivroBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(excluirUsuarioBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(autorLivroField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(anoLivroField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tituloLivroField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addComponent(adicionarLivroBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(excluirLivroBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(nomeUsuarioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(emailUsuarioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(telefoneUsuarioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(adicionarUsuarioBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(excluirUsuarioBtn)
                            .addComponent(emprestarLivroBtn))
                        .addGap(113, 113, 113)))
                .addGap(163, 163, 163)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
// Em TelaBiblioteca.java

private void carregarUsuariosDoBanco() {
    DefaultListModel<Usuario> model = (DefaultListModel<Usuario>) listaUsuario.getModel();
    model.clear(); // limpa antes de adicionar novamente

    for (Usuario usuario : UsuarioDAO.buscarTodos()) {
        // Ignora usu√°rios com n√≠vel "admin" ou "user"
        String nivel = usuario.getNivel();
        if (!nivel.equalsIgnoreCase("admin") && !nivel.equalsIgnoreCase("user")) {
            model.addElement(usuario);
        }
    }
}

    
 private void carregarLivrosDoBanco() { 
     LivroDAO.liberarLivrosOrfaos();
     DefaultListModel<Livro> model = (DefaultListModel<Livro>) listaLivro.getModel();
     model.clear();

    for (Livro livro : LivroDAO.buscarTodos()) {
        // Apenas adiciona os livros diretamente ‚Äî o toString cuida da exibi√ß√£o
        model.addElement(livro);
    }
}


 private void configurarPermissoes() {
    boolean isAdmin = usuarioLogado != null && usuarioLogado.getNivel().equalsIgnoreCase("admin");

    adicionarLivroBtn.setEnabled(isAdmin);
    excluirLivroBtn.setEnabled(isAdmin);
    excluirUsuarioBtn.setEnabled(isAdmin);

    // üëâ Importante: usu√°rios comuns ainda podem adicionar usu√°rios do tipo "user"
    adicionarUsuarioBtn.setEnabled(true);

    if (isAdmin) {
        emprestarLivroBtn.setText("Ver Hist√≥rico de Empr√©stimos");
    } else {
        emprestarLivroBtn.setText("Realizar Empr√©stimo");
    }
}
    
    private void autorLivroFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autorLivroFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_autorLivroFieldActionPerformed

    private void tituloLivroFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tituloLivroFieldActionPerformed
        // TODO add your handling code here: 
    }//GEN-LAST:event_tituloLivroFieldActionPerformed

    private void nomeUsuarioFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeUsuarioFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeUsuarioFieldActionPerformed

    private void emailUsuarioFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailUsuarioFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailUsuarioFieldActionPerformed

    private void adicionarLivroBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarLivroBtnActionPerformed
    String titulo = tituloLivroField.getText().trim();
    String autor = autorLivroField.getText().trim();
    String ano = anoLivroField.getText().trim();

    if (titulo.isEmpty() || autor.isEmpty() || ano.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Preencha todos os campos do livro!", "Erro", JOptionPane.ERROR_MESSAGE);
    } else if (!ano.matches("\\d{4}")) {
        JOptionPane.showMessageDialog(this, "Ano inv√°lido! Use o formato YYYY.", "Erro", JOptionPane.ERROR_MESSAGE);
    } else {
        int anoInt = Integer.parseInt(ano);
        Livro novoLivro = new Livro(0, titulo, autor, anoInt); // ID = 0 (ainda ser√° gerado pelo banco)

        if (LivroDAO.adicionarLivro(novoLivro)) {
            DefaultListModel<Livro> model = (DefaultListModel<Livro>) listaLivro.getModel();
            model.addElement(novoLivro);

            tituloLivroField.setText("");
            autorLivroField.setText("");
            anoLivroField.setText("");

            JOptionPane.showMessageDialog(this, "Livro adicionado com sucesso!");
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao adicionar livro no banco de dados!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
     }
    }//GEN-LAST:event_adicionarLivroBtnActionPerformed

    private void anoLivroFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anoLivroFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anoLivroFieldActionPerformed

    private void telefoneUsuarioFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefoneUsuarioFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telefoneUsuarioFieldActionPerformed

    private void excluirLivroBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirLivroBtnActionPerformed
     int selectedIndex = listaLivro.getSelectedIndex();
    if (selectedIndex != -1) {
        DefaultListModel<Livro> modelLivro = (DefaultListModel<Livro>) listaLivro.getModel();
        Livro livroSelecionado = modelLivro.getElementAt(selectedIndex);

        int confirmacao = JOptionPane.showConfirmDialog(this,
            "Tem certeza que deseja excluir o livro?\nIsso tamb√©m remover√° os empr√©stimos vinculados a ele.",
            "Confirma√ß√£o", JOptionPane.YES_NO_OPTION);

        if (confirmacao == JOptionPane.YES_OPTION) {
            // Remove os empr√©stimos vinculados a este livro
            EmprestimoDAO.excluirEmprestimosPorLivro(livroSelecionado.getId());

            // Tenta excluir o livro
            if (LivroDAO.excluirLivro(livroSelecionado.getId())) {
                modelLivro.remove(selectedIndex);
                JOptionPane.showMessageDialog(this, "üìï Livro exclu√≠do com sucesso!");
                carregarLivrosDoBanco(); // Atualiza lista e status de empr√©stimo
            } else {
                JOptionPane.showMessageDialog(this,
                    "Erro ao excluir livro do banco de dados.",
                    "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(this,
            "Selecione um livro para excluir!",
            "Aviso", JOptionPane.WARNING_MESSAGE);
     }

    }//GEN-LAST:event_excluirLivroBtnActionPerformed

    private void adicionarUsuarioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarUsuarioBtnActionPerformed
     String nome = nomeUsuarioField.getText().trim();
    String email = emailUsuarioField.getText().trim();
    String telefone = telefoneUsuarioField.getText().trim();

    if (nome.isEmpty() || email.isEmpty() || telefone.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Preencha todos os campos do usu√°rio!", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String nivel = "user"; // Sempre ser√° user

    Usuario novoUsuario = new Usuario(0, nome, email, telefone, nivel, "123");

    if (UsuarioDAO.adicionarUsuario(novoUsuario)) {
        DefaultListModel<Usuario> model = (DefaultListModel<Usuario>) listaUsuario.getModel();
        model.addElement(novoUsuario);

        nomeUsuarioField.setText("");
        emailUsuarioField.setText("");
        telefoneUsuarioField.setText("");

        JOptionPane.showMessageDialog(this, "Usu√°rio adicionado com sucesso!");
    } else {
        JOptionPane.showMessageDialog(this, "Erro ao adicionar usu√°rio no banco de dados!", "Erro", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_adicionarUsuarioBtnActionPerformed
     
    
    private void excluirUsuarioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirUsuarioBtnActionPerformed
   int selectedIndex = listaUsuario.getSelectedIndex();
    if (selectedIndex != -1) {
        DefaultListModel<Usuario> modelUsuario = (DefaultListModel<Usuario>) listaUsuario.getModel();
        Usuario usuarioSelecionado = modelUsuario.getElementAt(selectedIndex);

        int confirmacao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir o usu√°rio?", "Confirma√ß√£o", JOptionPane.YES_NO_OPTION);
        if (confirmacao == JOptionPane.YES_OPTION) {
            // ‚õî GARANTIA: Libera todos os livros emprestados pelo usu√°rio antes de excluir
            EmprestimoDAO.liberarLivrosPorUsuario(usuarioSelecionado.getId());

            if (UsuarioDAO.excluirUsuario(usuarioSelecionado.getId())) {
                modelUsuario.remove(selectedIndex);
                carregarLivrosDoBanco(); // üü¢ Recarrega com status atualizado
                JOptionPane.showMessageDialog(this, "Usu√°rio exclu√≠do com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir usu√°rio do banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Selecione um usu√°rio para excluir!", "Aviso", JOptionPane.WARNING_MESSAGE);
    }

    }//GEN-LAST:event_excluirUsuarioBtnActionPerformed

    private void emprestarLivroBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emprestarLivroBtnActionPerformed
     // üîç Verifica se √© admin
    if (usuarioLogado.getNivel().equalsIgnoreCase("admin")) {
        // üîπ Admin visualiza hist√≥rico
        List<Emprestimo> emprestimos = EmprestimoDAO.listarEmprestimosAtivos();

        if (emprestimos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum empr√©stimo ativo no momento.");
        } else {
            StringBuilder msg = new StringBuilder("üìö Empr√©stimos Ativos:\n\n");

            for (Emprestimo e : emprestimos) {
                LocalDate dataEmp = e.getDataEmprestimo();
                LocalDate dataLimite = dataEmp.plusDays(14);
                LocalDate hoje = LocalDate.now();

                boolean atrasado = hoje.isAfter(dataLimite);

                msg.append("- ").append(e.getLivro().getTitulo())
                   .append(" | por: ").append(e.getUsuario().getNome())
                   .append(" em: ").append(dataEmp)
                   .append(" ‚Üí at√©: ").append(dataLimite);

                if (atrasado) {
                    msg.append(" ‚ö†Ô∏è [ATRASADO]");
                }

                msg.append("\n");
            }

            JOptionPane.showMessageDialog(this, msg.toString(), "Hist√≥rico de Empr√©stimos", JOptionPane.INFORMATION_MESSAGE);
        }

        return; // impede que o admin realize empr√©stimos
    }

    // üîΩ Abaixo: fluxo normal do usu√°rio
    int livroIndex = listaLivro.getSelectedIndex();
    int usuarioIndex = listaUsuario.getSelectedIndex();

    if (livroIndex != -1 && usuarioIndex != -1) {
        DefaultListModel<Livro> model = (DefaultListModel<Livro>) listaLivro.getModel();

        Livro livro = model.getElementAt(livroIndex);
        Usuario usuario = listaUsuario.getModel().getElementAt(usuarioIndex);

        if (livro.isEmprestado()) {
            // Verifica se o usu√°rio pode devolver este livro
            if (!EmprestimoDAO.usuarioPodeDevolverLivro(livro.getId(), usuario.getId())) {
                JOptionPane.showMessageDialog(this,
                        "Este livro foi emprestado por outro usu√°rio.\nSelecione o usu√°rio correto para devolver!",
                        "Devolu√ß√£o n√£o permitida", JOptionPane.WARNING_MESSAGE);
                return;
            }

            int confirmacao = JOptionPane.showConfirmDialog(this,
                    "Deseja devolver o livro: " + livro.getTitulo() + "?",
                    "Confirmar Devolu√ß√£o",
                    JOptionPane.YES_NO_OPTION);

            if (confirmacao == JOptionPane.YES_OPTION) {
                if (EmprestimoDAO.registrarDevolucao(livro.getId())) {
                    livro.setEmprestado(false);
                    LivroDAO.atualizarEmprestimo(livro);
                    carregarLivrosDoBanco();

                    JOptionPane.showMessageDialog(this,
                            "‚úÖ Livro devolvido com sucesso!",
                            "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this,
                            "Erro ao devolver o livro.",
                            "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }

        } else {
            // üìö Novo empr√©stimo
            int emprestimosAtivos = EmprestimoDAO.contarEmprestimosAtivos(usuario.getId());

            if (emprestimosAtivos >= 3) {
                JOptionPane.showMessageDialog(this,
                        "‚ùå Este usu√°rio j√° possui 3 empr√©stimos ativos!",
                        "Limite Atingido", JOptionPane.WARNING_MESSAGE);
                return;
            }

            LocalDate hoje = java.time.LocalDate.now();
            LocalDate devolucao = hoje.plusDays(14);

            livro.setEmprestado(true);
            LivroDAO.atualizarEmprestimo(livro);

            Emprestimo emprestimo = new Emprestimo(livro, usuario);
            emprestimo.setDataEmprestimo(hoje);

            if (EmprestimoDAO.salvarEmprestimo(emprestimo)) {
                JOptionPane.showMessageDialog(this,
                        "üìö Empr√©stimo realizado!\n\nLivro: " + livro.getTitulo() +
                                "\nUsu√°rio: " + usuario.getNome() +
                                "\nData: " + hoje + " | Devolver at√©: " + devolucao,
                        "Sucesso", JOptionPane.INFORMATION_MESSAGE);

                carregarLivrosDoBanco(); // üîÅ isso repopula a lista com [EMPRESTADO]
            } else {
                JOptionPane.showMessageDialog(this,
                        "Erro ao registrar o empr√©stimo!",
                        "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }

    } else {
        JOptionPane.showMessageDialog(this,
                "Selecione um livro e um usu√°rio para continuar!",
                "Aviso", JOptionPane.WARNING_MESSAGE);
      }
    }//GEN-LAST:event_emprestarLivroBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaBiblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaBiblioteca().setVisible(true);
          }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarLivroBtn;
    private javax.swing.JButton adicionarUsuarioBtn;
    private javax.swing.JTextField anoLivroField;
    private javax.swing.JTextField autorLivroField;
    private javax.swing.JTextField emailUsuarioField;
    private javax.swing.JButton emprestarLivroBtn;
    private javax.swing.JButton excluirLivroBtn;
    private javax.swing.JButton excluirUsuarioBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<Livro> listaLivro;
    private javax.swing.JList<Usuario> listaUsuario;
    private javax.swing.JTextField nomeUsuarioField;
    private javax.swing.JTextField telefoneUsuarioField;
    private javax.swing.JTextField tituloLivroField;
    // End of variables declaration//GEN-END:variables

  }